name: coq-prover
base: core18
version: '@@PLATFORM_RELEASE@@'
summary: Coq
description: |
  @@COQ_DESCRIPTION@@

grade: stable
confinement: strict

parts:
  coq:
    plugin: nil
    build-packages: [build-essential, curl, m4, unzip, git]
    stage-packages: [make, libmpfr6, libgmp10]
    source: .
    source-type: local
    override-build: |
      if [ -d $SNAPCRAFT_PART_INSTALL/coq-platform/ ]; then exit 0; fi
      # build
      echo "COQ_PLATFORM_RELEASE=@@PLATFORM_RELEASE@@" >> package_picks/coq_platform_release.sh
      echo "COQ_PLATFORM_SWITCH_NAME=@@PLATFORM_RELEASE@@" >> package_picks/coq_platform_switch_name.sh
      echo "COQ_PLATFORM_REPO_NAME=@@PLATFORM_RELEASE@@" >> package_picks/coq_platform_switch_name.sh
      COQREGTESTING=y ./coq_platform_make.sh @@PLATFORM_ARGS@@ -dumplogs
      linux/snap/create_image_snap.sh -dest=$SNAPCRAFT_PART_INSTALL/coq-platform/ 

  wrapper:
    plugin: nil
    after: [coq]
    source: .
    source-type: local
    override-build: |
      # install wrapper for apps
      mkdir -p $SNAPCRAFT_PART_INSTALL/coq-platform/bin/
      cp linux/snap/coq_wrapper $SNAPCRAFT_PART_INSTALL/coq-platform/bin/

apps:
  coqide:
    command-chain: [ coq-platform/bin/coq_wrapper ]
    command: coq-platform/bin/coqide
    plugs:
    - home
    - desktop
    - desktop-legacy
    - gsettings
    - unity7
    - wayland
    - x11
    extensions: [gnome-3-28]
  coqtop:
    plugs: [home]
    command-chain: [ coq-platform/bin/coq_wrapper ]
    command: coq-platform/bin/coqtop
  coqc:
    plugs: [home]
    command-chain: [ coq-platform/bin/coq_wrapper ]
    command: coq-platform/bin/coqc
  coq-makefile:
    plugs: [home]
    command-chain: [ coq-platform/bin/coq_wrapper ]
    command: coq-platform/bin/coq_makefile
  coqidetop:
    plugs: [home,network-bind]
    command-chain: [ coq-platform/bin/coq_wrapper ]
    command: coq-platform/bin/coqidetop.opt


